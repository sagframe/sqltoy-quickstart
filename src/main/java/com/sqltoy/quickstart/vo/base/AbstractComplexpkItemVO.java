/**
 *@Generated by sagacity-quickvo 5.0
 */
package com.sqltoy.quickstart.vo.base;

import java.io.Serializable;
import org.sagacity.sqltoy.config.annotation.Entity;
import org.sagacity.sqltoy.config.annotation.Id;
import org.sagacity.sqltoy.config.annotation.Column;
import io.swagger.v3.oas.annotations.media.Schema;
import java.time.LocalDate;
import java.math.BigDecimal;
import java.time.LocalDateTime;

/**
 * @project sqltoy-quickstart
 * @author zhongxuchen
 * @version 1.0.0
 */
@Schema(name="ComplexpkItemVO",description="复合主键级联操作子表")
@Entity(tableName="sqltoy_complexpk_item",comment="复合主键级联操作子表",pk_constraint="PRIMARY")
public abstract class AbstractComplexpkItemVO implements Serializable {
	
	/**
	 * 
	 */
	private static final long serialVersionUID = 4276504492384224152L;
	
	/**
	 * jdbcType:VARCHAR
	 */
	@Schema(name="id",description="ID",nullable=false)
	@Id(strategy="generator",generator="org.sagacity.sqltoy.plugins.id.impl.DefaultIdGenerator")
	@Column(name="ID",comment="ID",length=32L,type=java.sql.Types.VARCHAR,nullable=false)
	protected String id;
	
	/**
	 * jdbcType:DATE
	 */
	@Schema(name="transDate",description="交易日期",nullable=true)
	@Column(name="TRANS_DATE",comment="交易日期",length=10L,type=java.sql.Types.DATE,nullable=true)
	protected LocalDate transDate;
	
	/**
	 * jdbcType:VARCHAR
	 */
	@Schema(name="transId",description="业务代码",nullable=true)
	@Column(name="TRANS_ID",comment="业务代码",length=30L,type=java.sql.Types.VARCHAR,nullable=true)
	protected String transId;
	
	/**
	 * jdbcType:VARCHAR
	 */
	@Schema(name="productId",description="商品编码",nullable=false)
	@Column(name="PRODUCT_ID",comment="商品编码",length=32L,type=java.sql.Types.VARCHAR,nullable=false)
	protected String productId;
	
	/**
	 * jdbcType:DECIMAL
	 */
	@Schema(name="quantity",description="数量",nullable=false)
	@Column(name="QUANTITY",comment="数量",length=8L,type=java.sql.Types.DECIMAL,nullable=false)
	protected BigDecimal quantity;
	
	/**
	 * jdbcType:DECIMAL
	 */
	@Schema(name="price",description="价格",nullable=false)
	@Column(name="PRICE",comment="价格",length=8L,type=java.sql.Types.DECIMAL,nullable=false)
	protected BigDecimal price;
	
	/**
	 * jdbcType:DECIMAL
	 */
	@Schema(name="amt",description="总金额",nullable=false)
	@Column(name="AMT",comment="总金额",length=10L,type=java.sql.Types.DECIMAL,nullable=false)
	protected BigDecimal amt;
	
	/**
	 * jdbcType:DATETIME
	 */
	@Schema(name="createTime",description="创建时间",nullable=false)
	@Column(name="CREATE_TIME",comment="创建时间",length=19L,type=java.sql.Types.DATE,nullable=false)
	protected LocalDateTime createTime;
	
	/** default constructor */
	public AbstractComplexpkItemVO() {
	}
	
	/** pk constructor */
	public AbstractComplexpkItemVO(String id)
	{
		this.id=id;
	}
	
	/**
	 *@param id the id to set
	 */
	public void setId(String id) {
		this.id=id;
	}
		
	/**
	 *@return the Id
	 */
	public String getId() {
	    return this.id;
	}
	
	/**
	 *@param transDate the transDate to set
	 */
	public void setTransDate(LocalDate transDate) {
		this.transDate=transDate;
	}
		
	/**
	 *@return the TransDate
	 */
	public LocalDate getTransDate() {
	    return this.transDate;
	}
	
	/**
	 *@param transId the transId to set
	 */
	public void setTransId(String transId) {
		this.transId=transId;
	}
		
	/**
	 *@return the TransId
	 */
	public String getTransId() {
	    return this.transId;
	}
	
	/**
	 *@param productId the productId to set
	 */
	public void setProductId(String productId) {
		this.productId=productId;
	}
		
	/**
	 *@return the ProductId
	 */
	public String getProductId() {
	    return this.productId;
	}
	
	/**
	 *@param quantity the quantity to set
	 */
	public void setQuantity(BigDecimal quantity) {
		this.quantity=quantity;
	}
		
	/**
	 *@return the Quantity
	 */
	public BigDecimal getQuantity() {
	    return this.quantity;
	}
	
	/**
	 *@param price the price to set
	 */
	public void setPrice(BigDecimal price) {
		this.price=price;
	}
		
	/**
	 *@return the Price
	 */
	public BigDecimal getPrice() {
	    return this.price;
	}
	
	/**
	 *@param amt the amt to set
	 */
	public void setAmt(BigDecimal amt) {
		this.amt=amt;
	}
		
	/**
	 *@return the Amt
	 */
	public BigDecimal getAmt() {
	    return this.amt;
	}
	
	/**
	 *@param createTime the createTime to set
	 */
	public void setCreateTime(LocalDateTime createTime) {
		this.createTime=createTime;
	}
		
	/**
	 *@return the CreateTime
	 */
	public LocalDateTime getCreateTime() {
	    return this.createTime;
	}


	/**
     * @todo vo columns to String
     */
    @Override
	public String toString() {
		StringBuilder columnsBuffer=new StringBuilder();
		columnsBuffer.append("id=").append(getId()).append("\n");
		columnsBuffer.append("transDate=").append(getTransDate()).append("\n");
		columnsBuffer.append("transId=").append(getTransId()).append("\n");
		columnsBuffer.append("productId=").append(getProductId()).append("\n");
		columnsBuffer.append("quantity=").append(getQuantity()).append("\n");
		columnsBuffer.append("price=").append(getPrice()).append("\n");
		columnsBuffer.append("amt=").append(getAmt()).append("\n");
		columnsBuffer.append("createTime=").append(getCreateTime()).append("\n");
		return columnsBuffer.toString();
	}
	
}

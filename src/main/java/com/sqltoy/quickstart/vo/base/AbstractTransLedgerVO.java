/**
 *@Generated by sagacity-quickvo 4.18
 */
package com.sqltoy.quickstart.vo.base;

import java.io.Serializable;
import java.util.List;
import org.sagacity.sqltoy.config.annotation.Entity;
import org.sagacity.sqltoy.config.annotation.Id;
import org.sagacity.sqltoy.config.annotation.Column;
import io.swagger.v3.oas.annotations.media.Schema;
import java.math.BigDecimal;
import java.time.LocalDateTime;

/**
 * @project sqltoy-quickstart
 * @version 1.0.0
 * Table: sqltoy_trans_ledger,Remark:交易台账并发演示表  
 */
@Schema(name="TransLedgerVO",description="交易台账并发演示表")
@Entity(tableName="sqltoy_trans_ledger",pk_constraint="PRIMARY")
public abstract class AbstractTransLedgerVO implements Serializable {
	
	/**
	 * 
	 */
	private static final long serialVersionUID = 4597959959620655989L;
	
	/**
	 * jdbcType:VARCHAR
	 * ID
	 */
	@Schema(name="ID",description="ID",nullable=false)
	@Id(strategy="generator",generator="org.sagacity.sqltoy.plugins.id.impl.DefaultIdGenerator")
	@Column(name="ID",length=32L,type=java.sql.Types.VARCHAR,nullable=false)
	protected String id;
	
	/**
	 * jdbcType:VARCHAR
	 * 订单ID
	 */
	@Schema(name="ORDER_ID",description="订单ID",nullable=false)
	@Column(name="ORDER_ID",length=32L,type=java.sql.Types.VARCHAR,nullable=false)
	protected String orderId;
	
	/**
	 * jdbcType:INT
	 * 数量
	 */
	@Schema(name="QUANTITY",description="数量",nullable=false)
	@Column(name="QUANTITY",length=10L,type=java.sql.Types.INTEGER,nullable=false)
	protected Integer quantity;
	
	/**
	 * jdbcType:DECIMAL
	 * 金额
	 */
	@Schema(name="AMT",description="金额",nullable=false)
	@Column(name="AMT",length=12L,type=java.sql.Types.DECIMAL,nullable=false)
	protected BigDecimal amt;
	
	/**
	 * jdbcType:VARCHAR
	 * 创建人
	 */
	@Schema(name="CREATE_BY",description="创建人",nullable=false)
	@Column(name="CREATE_BY",length=22L,type=java.sql.Types.VARCHAR,nullable=false)
	protected String createBy;
	
	/**
	 * jdbcType:DATETIME
	 * 创建时间
	 */
	@Schema(name="CREATE_TIME",description="创建时间",nullable=false)
	@Column(name="CREATE_TIME",length=19L,type=java.sql.Types.DATE,nullable=false)
	protected LocalDateTime createTime;
	
	/**
	 * jdbcType:VARCHAR
	 * 最后修改人
	 */
	@Schema(name="UPDATE_BY",description="最后修改人",nullable=false)
	@Column(name="UPDATE_BY",length=22L,type=java.sql.Types.VARCHAR,nullable=false)
	protected String updateBy;
	
	/**
	 * jdbcType:DATETIME
	 * 最后修改时间
	 */
	@Schema(name="UPDATE_TIME",description="最后修改时间",nullable=false)
	@Column(name="UPDATE_TIME",length=19L,type=java.sql.Types.DATE,nullable=false)
	protected LocalDateTime updateTime;
	

	/** default constructor */
	public AbstractTransLedgerVO() {
	}
	
	/** pk constructor */
	public AbstractTransLedgerVO(String id)
	{
		this.id=id;
	}

	
	/**
	 *@param id the id to set
	 */
	public void setId(String id) {
		this.id=id;
	}
		
	/**
	 *@return the Id
	 */
	public String getId() {
	    return this.id;
	}
	
	/**
	 *@param orderId the orderId to set
	 */
	public void setOrderId(String orderId) {
		this.orderId=orderId;
	}
		
	/**
	 *@return the OrderId
	 */
	public String getOrderId() {
	    return this.orderId;
	}
	
	/**
	 *@param quantity the quantity to set
	 */
	public void setQuantity(Integer quantity) {
		this.quantity=quantity;
	}
		
	/**
	 *@return the Quantity
	 */
	public Integer getQuantity() {
	    return this.quantity;
	}
	
	/**
	 *@param amt the amt to set
	 */
	public void setAmt(BigDecimal amt) {
		this.amt=amt;
	}
		
	/**
	 *@return the Amt
	 */
	public BigDecimal getAmt() {
	    return this.amt;
	}
	
	/**
	 *@param createBy the createBy to set
	 */
	public void setCreateBy(String createBy) {
		this.createBy=createBy;
	}
		
	/**
	 *@return the CreateBy
	 */
	public String getCreateBy() {
	    return this.createBy;
	}
	
	/**
	 *@param createTime the createTime to set
	 */
	public void setCreateTime(LocalDateTime createTime) {
		this.createTime=createTime;
	}
		
	/**
	 *@return the CreateTime
	 */
	public LocalDateTime getCreateTime() {
	    return this.createTime;
	}
	
	/**
	 *@param updateBy the updateBy to set
	 */
	public void setUpdateBy(String updateBy) {
		this.updateBy=updateBy;
	}
		
	/**
	 *@return the UpdateBy
	 */
	public String getUpdateBy() {
	    return this.updateBy;
	}
	
	/**
	 *@param updateTime the updateTime to set
	 */
	public void setUpdateTime(LocalDateTime updateTime) {
		this.updateTime=updateTime;
	}
		
	/**
	 *@return the UpdateTime
	 */
	public LocalDateTime getUpdateTime() {
	    return this.updateTime;
	}



	/**
     * @todo vo columns to String
     */
    @Override
	public String toString() {
		StringBuilder columnsBuffer=new StringBuilder();
		columnsBuffer.append("id=").append(getId()).append("\n");
		columnsBuffer.append("orderId=").append(getOrderId()).append("\n");
		columnsBuffer.append("quantity=").append(getQuantity()).append("\n");
		columnsBuffer.append("amt=").append(getAmt()).append("\n");
		columnsBuffer.append("createBy=").append(getCreateBy()).append("\n");
		columnsBuffer.append("createTime=").append(getCreateTime()).append("\n");
		columnsBuffer.append("updateBy=").append(getUpdateBy()).append("\n");
		columnsBuffer.append("updateTime=").append(getUpdateTime()).append("\n");
		return columnsBuffer.toString();
	}
	
}

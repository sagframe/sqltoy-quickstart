/**
 *@Generated by sagacity-quickvo 5.0
 */
package com.sqltoy.quickstart.vo.base;

import java.io.Serializable;
import org.sagacity.sqltoy.config.annotation.Entity;
import org.sagacity.sqltoy.config.annotation.Id;
import org.sagacity.sqltoy.config.annotation.Column;
import io.swagger.v3.oas.annotations.media.Schema;
import java.math.BigDecimal;

/**
 * @project sqltoy-quickstart
 * @author zhongxuchen
 * @version 1.0.0
 */
@Schema(name="FruitOrderVO",description="查询汇总演示-水果订单表")
@Entity(tableName="sqltoy_fruit_order",comment="查询汇总演示-水果订单表",pk_constraint="PRIMARY")
public abstract class AbstractFruitOrderVO implements Serializable {
	
	/**
	 * 
	 */
	private static final long serialVersionUID = 220108225225325678L;
	
	/**
	 * jdbcType:VARCHAR
	 */
	@Schema(name="fruitName",description="水果名称",nullable=false)
	@Id
	@Column(name="FRUIT_NAME",comment="水果名称",length=100L,type=java.sql.Types.VARCHAR,nullable=false)
	protected String fruitName;
	
	/**
	 * jdbcType:INT
	 */
	@Schema(name="orderMonth",description="订单月份",nullable=false)
	@Id
	@Column(name="ORDER_MONTH",comment="订单月份",length=10L,type=java.sql.Types.INTEGER,nullable=false)
	protected Integer orderMonth;
	
	/**
	 * jdbcType:DECIMAL
	 */
	@Schema(name="saleCount",description="销售数量",nullable=false)
	@Column(name="SALE_COUNT",comment="销售数量",length=10L,type=java.sql.Types.DECIMAL,nullable=false)
	protected BigDecimal saleCount;
	
	/**
	 * jdbcType:DECIMAL
	 */
	@Schema(name="salePrice",description="销售单价",nullable=false)
	@Column(name="SALE_PRICE",comment="销售单价",length=10L,type=java.sql.Types.DECIMAL,nullable=false)
	protected BigDecimal salePrice;
	
	/**
	 * jdbcType:DECIMAL
	 */
	@Schema(name="totalAmt",description="总金额",nullable=false)
	@Column(name="TOTAL_AMT",comment="总金额",length=10L,type=java.sql.Types.DECIMAL,nullable=false)
	protected BigDecimal totalAmt;
	
	/** default constructor */
	public AbstractFruitOrderVO() {
	}
	
	/** pk constructor */
	public AbstractFruitOrderVO(String fruitName,Integer orderMonth)
	{
		this.fruitName=fruitName;
		this.orderMonth=orderMonth;
	}
	
	/**
	 *@param fruitName the fruitName to set
	 */
	public void setFruitName(String fruitName) {
		this.fruitName=fruitName;
	}
		
	/**
	 *@return the FruitName
	 */
	public String getFruitName() {
	    return this.fruitName;
	}
	
	/**
	 *@param orderMonth the orderMonth to set
	 */
	public void setOrderMonth(Integer orderMonth) {
		this.orderMonth=orderMonth;
	}
		
	/**
	 *@return the OrderMonth
	 */
	public Integer getOrderMonth() {
	    return this.orderMonth;
	}
	
	/**
	 *@param saleCount the saleCount to set
	 */
	public void setSaleCount(BigDecimal saleCount) {
		this.saleCount=saleCount;
	}
		
	/**
	 *@return the SaleCount
	 */
	public BigDecimal getSaleCount() {
	    return this.saleCount;
	}
	
	/**
	 *@param salePrice the salePrice to set
	 */
	public void setSalePrice(BigDecimal salePrice) {
		this.salePrice=salePrice;
	}
		
	/**
	 *@return the SalePrice
	 */
	public BigDecimal getSalePrice() {
	    return this.salePrice;
	}
	
	/**
	 *@param totalAmt the totalAmt to set
	 */
	public void setTotalAmt(BigDecimal totalAmt) {
		this.totalAmt=totalAmt;
	}
		
	/**
	 *@return the TotalAmt
	 */
	public BigDecimal getTotalAmt() {
	    return this.totalAmt;
	}


	/**
     * @todo vo columns to String
     */
    @Override
	public String toString() {
		StringBuilder columnsBuffer=new StringBuilder();
		columnsBuffer.append("fruitName=").append(getFruitName()).append("\n");
		columnsBuffer.append("orderMonth=").append(getOrderMonth()).append("\n");
		columnsBuffer.append("saleCount=").append(getSaleCount()).append("\n");
		columnsBuffer.append("salePrice=").append(getSalePrice()).append("\n");
		columnsBuffer.append("totalAmt=").append(getTotalAmt()).append("\n");
		return columnsBuffer.toString();
	}
	
}

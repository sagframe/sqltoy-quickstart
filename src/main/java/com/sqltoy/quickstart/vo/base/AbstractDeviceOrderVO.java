/**
 *@Generated by sagacity-quickvo 5.0
 */
package com.sqltoy.quickstart.vo.base;

import java.io.Serializable;
import org.sagacity.sqltoy.config.annotation.Entity;
import org.sagacity.sqltoy.config.annotation.Id;
import org.sagacity.sqltoy.config.annotation.Column;
import io.swagger.v3.oas.annotations.media.Schema;
import java.math.BigDecimal;
import java.time.LocalDate;
import java.time.LocalDateTime;

/**
 * @project sqltoy-quickstart
 * @author zhongxuchen
 * @version 1.0.0
 */
@Schema(name="DeviceOrderVO",description="硬件购销定单表(演示有规则单号)")
@Entity(tableName="sqltoy_device_order",comment="硬件购销定单表(演示有规则单号)",pk_constraint="PRIMARY")
public abstract class AbstractDeviceOrderVO implements Serializable {
	
	/**
	 * 
	 */
	private static final long serialVersionUID = 5912077678038173577L;
	
	/**
	 * jdbcType:VARCHAR
	 */
	@Schema(name="orderId",description="订单ID",nullable=false)
	@Id(strategy="generator",generator="org.sagacity.sqltoy.plugins.id.impl.DefaultIdGenerator")
	@Column(name="ORDER_ID",comment="订单ID",length=22L,type=java.sql.Types.VARCHAR,nullable=false)
	protected String orderId;
	
	/**
	 * jdbcType:VARCHAR
	 */
	@Schema(name="deviceType",description="设备类型",nullable=false)
	@Column(name="DEVICE_TYPE",comment="设备类型",length=10L,type=java.sql.Types.VARCHAR,nullable=false)
	protected String deviceType;
	
	/**
	 * jdbcType:VARCHAR
	 */
	@Schema(name="psType",description="购销标志",nullable=false)
	@Column(name="PS_TYPE",comment="购销标志",length=10L,type=java.sql.Types.VARCHAR,nullable=false)
	protected String psType;
	
	/**
	 * jdbcType:DECIMAL
	 */
	@Schema(name="totalCnt",description="商品总量",nullable=true)
	@Column(name="TOTAL_CNT",comment="商品总量",length=12L,type=java.sql.Types.DECIMAL,nullable=true)
	protected BigDecimal totalCnt;
	
	/**
	 * jdbcType:DECIMAL
	 */
	@Schema(name="totalAmt",description="总金额",nullable=true)
	@Column(name="TOTAL_AMT",comment="总金额",length=12L,type=java.sql.Types.DECIMAL,nullable=true)
	protected BigDecimal totalAmt;
	
	/**
	 * jdbcType:VARCHAR
	 */
	@Schema(name="buyer",description="购买方",nullable=true)
	@Column(name="BUYER",comment="购买方",length=22L,type=java.sql.Types.VARCHAR,nullable=true)
	protected String buyer;
	
	/**
	 * jdbcType:VARCHAR
	 */
	@Schema(name="saler",description="销售方",nullable=true)
	@Column(name="SALER",comment="销售方",length=22L,type=java.sql.Types.VARCHAR,nullable=true)
	protected String saler;
	
	/**
	 * jdbcType:DATE
	 */
	@Schema(name="transDate",description="成交日期",nullable=false)
	@Column(name="TRANS_DATE",comment="成交日期",length=10L,type=java.sql.Types.DATE,nullable=false)
	protected LocalDate transDate;
	
	/**
	 * jdbcType:DATE
	 */
	@Schema(name="deliveryTerm",description="交货期限",nullable=true)
	@Column(name="DELIVERY_TERM",comment="交货期限",length=10L,type=java.sql.Types.DATE,nullable=true)
	protected LocalDate deliveryTerm;
	
	/**
	 * jdbcType:VARCHAR
	 */
	@Schema(name="staffId",description="业务员",nullable=true)
	@Column(name="STAFF_ID",comment="业务员",length=22L,type=java.sql.Types.VARCHAR,nullable=true)
	protected String staffId;
	
	/**
	 * jdbcType:VARCHAR
	 */
	@Schema(name="organId",description="业务机构",nullable=true)
	@Column(name="ORGAN_ID",comment="业务机构",length=22L,type=java.sql.Types.VARCHAR,nullable=true)
	protected String organId;
	
	/**
	 * jdbcType:INT
	 */
	@Schema(name="status",description="状态",nullable=false)
	@Column(name="STATUS",comment="状态",length=10L,type=java.sql.Types.INTEGER,nullable=false)
	protected Integer status;
	
	/**
	 * jdbcType:VARCHAR
	 */
	@Schema(name="createBy",description="创建人",nullable=false)
	@Column(name="CREATE_BY",comment="创建人",length=22L,type=java.sql.Types.VARCHAR,nullable=false)
	protected String createBy;
	
	/**
	 * jdbcType:DATETIME
	 */
	@Schema(name="createTime",description="创建时间",nullable=false)
	@Column(name="CREATE_TIME",comment="创建时间",length=19L,type=java.sql.Types.DATE,nullable=false)
	protected LocalDateTime createTime;
	
	/**
	 * jdbcType:VARCHAR
	 */
	@Schema(name="updateBy",description="最后修改人",nullable=false)
	@Column(name="UPDATE_BY",comment="最后修改人",length=22L,type=java.sql.Types.VARCHAR,nullable=false)
	protected String updateBy;
	
	/**
	 * jdbcType:DATETIME
	 */
	@Schema(name="updateTime",description="最后修改时间",nullable=false)
	@Column(name="UPDATE_TIME",comment="最后修改时间",length=19L,type=java.sql.Types.DATE,nullable=false)
	protected LocalDateTime updateTime;
	
	/** default constructor */
	public AbstractDeviceOrderVO() {
	}
	
	/** pk constructor */
	public AbstractDeviceOrderVO(String orderId)
	{
		this.orderId=orderId;
	}
	
	/**
	 *@param orderId the orderId to set
	 */
	public void setOrderId(String orderId) {
		this.orderId=orderId;
	}
		
	/**
	 *@return the OrderId
	 */
	public String getOrderId() {
	    return this.orderId;
	}
	
	/**
	 *@param deviceType the deviceType to set
	 */
	public void setDeviceType(String deviceType) {
		this.deviceType=deviceType;
	}
		
	/**
	 *@return the DeviceType
	 */
	public String getDeviceType() {
	    return this.deviceType;
	}
	
	/**
	 *@param psType the psType to set
	 */
	public void setPsType(String psType) {
		this.psType=psType;
	}
		
	/**
	 *@return the PsType
	 */
	public String getPsType() {
	    return this.psType;
	}
	
	/**
	 *@param totalCnt the totalCnt to set
	 */
	public void setTotalCnt(BigDecimal totalCnt) {
		this.totalCnt=totalCnt;
	}
		
	/**
	 *@return the TotalCnt
	 */
	public BigDecimal getTotalCnt() {
	    return this.totalCnt;
	}
	
	/**
	 *@param totalAmt the totalAmt to set
	 */
	public void setTotalAmt(BigDecimal totalAmt) {
		this.totalAmt=totalAmt;
	}
		
	/**
	 *@return the TotalAmt
	 */
	public BigDecimal getTotalAmt() {
	    return this.totalAmt;
	}
	
	/**
	 *@param buyer the buyer to set
	 */
	public void setBuyer(String buyer) {
		this.buyer=buyer;
	}
		
	/**
	 *@return the Buyer
	 */
	public String getBuyer() {
	    return this.buyer;
	}
	
	/**
	 *@param saler the saler to set
	 */
	public void setSaler(String saler) {
		this.saler=saler;
	}
		
	/**
	 *@return the Saler
	 */
	public String getSaler() {
	    return this.saler;
	}
	
	/**
	 *@param transDate the transDate to set
	 */
	public void setTransDate(LocalDate transDate) {
		this.transDate=transDate;
	}
		
	/**
	 *@return the TransDate
	 */
	public LocalDate getTransDate() {
	    return this.transDate;
	}
	
	/**
	 *@param deliveryTerm the deliveryTerm to set
	 */
	public void setDeliveryTerm(LocalDate deliveryTerm) {
		this.deliveryTerm=deliveryTerm;
	}
		
	/**
	 *@return the DeliveryTerm
	 */
	public LocalDate getDeliveryTerm() {
	    return this.deliveryTerm;
	}
	
	/**
	 *@param staffId the staffId to set
	 */
	public void setStaffId(String staffId) {
		this.staffId=staffId;
	}
		
	/**
	 *@return the StaffId
	 */
	public String getStaffId() {
	    return this.staffId;
	}
	
	/**
	 *@param organId the organId to set
	 */
	public void setOrganId(String organId) {
		this.organId=organId;
	}
		
	/**
	 *@return the OrganId
	 */
	public String getOrganId() {
	    return this.organId;
	}
	
	/**
	 *@param status the status to set
	 */
	public void setStatus(Integer status) {
		this.status=status;
	}
		
	/**
	 *@return the Status
	 */
	public Integer getStatus() {
	    return this.status;
	}
	
	/**
	 *@param createBy the createBy to set
	 */
	public void setCreateBy(String createBy) {
		this.createBy=createBy;
	}
		
	/**
	 *@return the CreateBy
	 */
	public String getCreateBy() {
	    return this.createBy;
	}
	
	/**
	 *@param createTime the createTime to set
	 */
	public void setCreateTime(LocalDateTime createTime) {
		this.createTime=createTime;
	}
		
	/**
	 *@return the CreateTime
	 */
	public LocalDateTime getCreateTime() {
	    return this.createTime;
	}
	
	/**
	 *@param updateBy the updateBy to set
	 */
	public void setUpdateBy(String updateBy) {
		this.updateBy=updateBy;
	}
		
	/**
	 *@return the UpdateBy
	 */
	public String getUpdateBy() {
	    return this.updateBy;
	}
	
	/**
	 *@param updateTime the updateTime to set
	 */
	public void setUpdateTime(LocalDateTime updateTime) {
		this.updateTime=updateTime;
	}
		
	/**
	 *@return the UpdateTime
	 */
	public LocalDateTime getUpdateTime() {
	    return this.updateTime;
	}


	/**
     * @todo vo columns to String
     */
    @Override
	public String toString() {
		StringBuilder columnsBuffer=new StringBuilder();
		columnsBuffer.append("orderId=").append(getOrderId()).append("\n");
		columnsBuffer.append("deviceType=").append(getDeviceType()).append("\n");
		columnsBuffer.append("psType=").append(getPsType()).append("\n");
		columnsBuffer.append("totalCnt=").append(getTotalCnt()).append("\n");
		columnsBuffer.append("totalAmt=").append(getTotalAmt()).append("\n");
		columnsBuffer.append("buyer=").append(getBuyer()).append("\n");
		columnsBuffer.append("saler=").append(getSaler()).append("\n");
		columnsBuffer.append("transDate=").append(getTransDate()).append("\n");
		columnsBuffer.append("deliveryTerm=").append(getDeliveryTerm()).append("\n");
		columnsBuffer.append("staffId=").append(getStaffId()).append("\n");
		columnsBuffer.append("organId=").append(getOrganId()).append("\n");
		columnsBuffer.append("status=").append(getStatus()).append("\n");
		columnsBuffer.append("createBy=").append(getCreateBy()).append("\n");
		columnsBuffer.append("createTime=").append(getCreateTime()).append("\n");
		columnsBuffer.append("updateBy=").append(getUpdateBy()).append("\n");
		columnsBuffer.append("updateTime=").append(getUpdateTime()).append("\n");
		return columnsBuffer.toString();
	}
	
}

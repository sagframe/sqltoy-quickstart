/**
 *@Generated by sagacity-quickvo 4.13
 */
package com.sqltoy.quickstart.vo;

import java.math.BigDecimal;
import java.time.LocalDate;
import java.time.LocalDateTime;

import org.sagacity.sqltoy.config.annotation.SqlToyEntity;

import com.sqltoy.quickstart.vo.base.AbstractTransInfoHisVO;

/**
 * @project sqltoy-showcase
 * @author zhongxuchen
 * @version 1.0.0
 * Table: sqltoy_trans_info_his,Remark:支付交易流水表 	
 */
@SqlToyEntity
public class TransInfoHisVO extends AbstractTransInfoHisVO {	
	/**
	 * 
	 */
	private static final long serialVersionUID = 1888897225560208297L;
	
	/** default constructor */
	public TransInfoHisVO() {
		super();
	}
	/*---begin-constructor-area---don't-update-this-area--*/
	/** pk constructor */
	public TransInfoHisVO(String transId)
	{
		this.transId=transId;
	}

	/** minimal constructor */
	public TransInfoHisVO(String transId,String transCode,String transChannel,BigDecimal transAmt,Integer status,String resultCode,LocalDateTime transTime,LocalDate transDate,String userId)
	{
		this.transId=transId;
		this.transCode=transCode;
		this.transChannel=transChannel;
		this.transAmt=transAmt;
		this.status=status;
		this.resultCode=resultCode;
		this.transTime=transTime;
		this.transDate=transDate;
		this.userId=userId;
	}

	/** full constructor */
	public TransInfoHisVO(String transId,String transCode,String transChannel,BigDecimal transAmt,Integer status,String resultCode,LocalDateTime transTime,LocalDate transDate,String userId,String cardNo)
	{
		this.transId=transId;
		this.transCode=transCode;
		this.transChannel=transChannel;
		this.transAmt=transAmt;
		this.status=status;
		this.resultCode=resultCode;
		this.transTime=transTime;
		this.transDate=transDate;
		this.userId=userId;
		this.cardNo=cardNo;
	}

	/*---end-constructor-area---don't-update-this-area--*/
	/**
     *@todo vo columns to String
     */
    @Override
	public String toString() {
		return super.toString();
	}
	
	/*
	 * (non-Javadoc)
	 * 
	 * @see java.lang.Object#clone()
	 */
	@Override
	public TransInfoHisVO clone() {
		try {
			return (TransInfoHisVO) super.clone();
		} catch (CloneNotSupportedException e) {
			e.printStackTrace();
		}
		return null;
	}
	
}

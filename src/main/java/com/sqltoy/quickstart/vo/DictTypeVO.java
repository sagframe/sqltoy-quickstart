/**
 *@Generated by sagacity-quickvo 5.0
 */
package com.sqltoy.quickstart.vo;

import java.io.Serializable;
import org.sagacity.sqltoy.config.annotation.Entity;
import org.sagacity.sqltoy.config.annotation.Id;
import org.sagacity.sqltoy.config.annotation.Column;
import io.swagger.v3.oas.annotations.media.Schema;
import lombok.Data;
import lombok.experimental.Accessors;
import java.time.LocalDateTime;
import org.sagacity.sqltoy.config.annotation.OneToMany;
import java.util.List;
import java.util.ArrayList;

/**
 * @project sqltoy-quickstart
 * @author zhongxuchen
 * @version 1.0.0 
 */
@Schema(name="DictTypeVO",description="字典分类表")
@Data
@Accessors(chain = true)
@Entity(tableName="sqltoy_dict_type",comment="字典分类表",pk_constraint="PRIMARY")
public class DictTypeVO implements Serializable {
	
	/**
	 * 
	 */
	private static final long serialVersionUID = 7652087330184138442L;
/*---begin-auto-generate-don't-update-this-area--*/	

	@Schema(name="dictType",description="字典类型代码",nullable=false)
	@Id(strategy="generator",generator="org.sagacity.sqltoy.plugins.id.impl.DefaultIdGenerator")
	@Column(name="DICT_TYPE",comment="字典类型代码",length=50L,type=java.sql.Types.VARCHAR,nativeType="VARCHAR",nullable=false)
	private String dictType;

	@Schema(name="dictTypeName",description="字典类型名称",nullable=false)
	@Column(name="DICT_TYPE_NAME",comment="字典类型名称",length=100L,type=java.sql.Types.VARCHAR,nativeType="VARCHAR",nullable=false)
	private String dictTypeName;

	@Schema(name="comments",description="说明",nullable=true)
	@Column(name="COMMENTS",comment="说明",length=500L,type=java.sql.Types.VARCHAR,nativeType="VARCHAR",nullable=true)
	private String comments;

	@Schema(name="showIndex",description="显示顺序",nullable=false)
	@Column(name="SHOW_INDEX",comment="显示顺序",length=8L,defaultValue="1",type=java.sql.Types.INTEGER,nativeType="DECIMAL",nullable=false)
	private Integer showIndex;

	@Schema(name="createBy",description="创建人",nullable=false)
	@Column(name="CREATE_BY",comment="创建人",length=22L,type=java.sql.Types.VARCHAR,nativeType="VARCHAR",nullable=false)
	private String createBy;

	@Schema(name="createTime",description="创建时间",nullable=false)
	@Column(name="CREATE_TIME",comment="创建时间",length=19L,type=java.sql.Types.DATE,nativeType="DATETIME",nullable=false)
	private LocalDateTime createTime;

	@Schema(name="updateBy",description="最后修改人",nullable=false)
	@Column(name="UPDATE_BY",comment="最后修改人",length=22L,type=java.sql.Types.VARCHAR,nativeType="VARCHAR",nullable=false)
	private String updateBy;

	@Schema(name="updateTime",description="最后修改时间",nullable=false)
	@Column(name="UPDATE_TIME",comment="最后修改时间",length=19L,type=java.sql.Types.DATE,nativeType="DATETIME",nullable=false)
	private LocalDateTime updateTime;

	@Schema(name="status",description="状态",nullable=false)
	@Column(name="STATUS",comment="状态",length=1L,defaultValue="1",type=java.sql.Types.INTEGER,nativeType="DECIMAL",nullable=false)
	private Integer status;
	/**
	 * 主键关联子表信息
	 */
	@OneToMany(fields={"dictType"},mappedFields={"dictType"},delete=true,orderBy="showIndex desc")
	private List<DictDetailVO> dictDetailVOs=new ArrayList<DictDetailVO>();

	/** default constructor */
	public DictTypeVO() {
	}
	
	/** pk constructor */
	public DictTypeVO(String dictType)
	{
		this.dictType=dictType;
	}
/*---end-auto-generate-don't-update-this-area--*/
}
